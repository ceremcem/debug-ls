#!/bin/bash
SOURCE="${BASH_SOURCE[0]}"
while [ -h "$SOURCE" ]; do # resolve $SOURCE until the file is no longer a symlink
  DIR="$( cd -P "$( dirname "$SOURCE" )" >/dev/null 2>&1 && pwd )"
  SOURCE="$(readlink "$SOURCE")"
  [[ $SOURCE != /* ]] && SOURCE="$DIR/$SOURCE" # if $SOURCE was a relative symlink, we need to resolve it relative to the path where the symlink file was located
done
DIR="$( cd -P "$( dirname "$SOURCE" )" >/dev/null 2>&1 && pwd )"

src=$1
[[ -z $src ]] && { echo "First parameter should be the .ls file"; exit 1; }

tmp="$(dirname $src)/__$(basename $src).js"
[[ -f $tmp ]] && { echo "ERROR: TMP file exists: $tmp"; exit 2; }
cleanup(){
    echo "Cleaning up temporary file ($tmp)"
    rm $tmp 2> /dev/null
}
trap cleanup EXIT
rollup -c "$DIR/rollup.config.js" --input $src --output.file $tmp
echo "Go to chrome://inspect/#devices"
node --enable-source-maps --inspect-brk $tmp
